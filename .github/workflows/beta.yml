# ENVIRONMENT VARIABLES

name: Beta

on: 
  push:
    branches:
      - beta

jobs:
  setup-linux:
    name: Setup - Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive
      - uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: v1-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - uses: actions/cache@v1
        id: submodule-cache
        with:
          path: src/shared/node_modules
          key: v1-${{ runner.os }}-${{ hashFiles('src/shared/yarn.lock') }}
      - name: Yarn Install
        if: steps.cache.outputs.cache-hit != 'true' || steps.submodule-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
  # setup-macos:
  #   name: Setup - MacOS
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Checkout submodules
  #       run: |
  #         git submodule sync --recursive
  #         git submodule update --init --recursive
  #     - uses: actions/cache@v1
  #       id: cache
  #       with:
  #         path: node_modules
  #         key: v1-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
  #     - uses: actions/cache@v1
  #       id: submodule-cache
  #       with:
  #         path: src/shared/node_modules
  #         key: v1-${{ runner.os }}-${{ hashFiles('src/shared/yarn.lock') }}
  #     - name: Yarn Install
  #       run: yarn install --frozen-lockfile
  test-lint:
    name: Test - Lint
    runs-on: ubuntu-latest
    needs: setup-linux
    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive
      - uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: v1-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - uses: actions/cache@v1
        id: submodule-cache
        with:
          path: src/shared/node_modules
          key: v1-${{ runner.os }}-${{ hashFiles('src/shared/yarn.lock') }}
      - name: Lint
        run: yarn lint
  test-typecheck:
    name: Test - Type Check
    runs-on: ubuntu-latest
    needs: setup-linux
    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive
      - uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: v1-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - uses: actions/cache@v1
        id: submodule-cache
        with:
          path: src/shared/node_modules
          key: v1-${{ runner.os }}-${{ hashFiles('src/shared/yarn.lock') }}
      - name: Type Check
        run: yarn typescript
  test-jest:
    name: Test - Jest
    runs-on: ubuntu-latest
    needs: setup-linux
    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive
      - uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: v1-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - uses: actions/cache@v1
        id: submodule-cache
        with:
          path: src/shared/node_modules
          key: v1-${{ runner.os }}-${{ hashFiles('src/shared/yarn.lock') }}
      - name: Test
        run: yarn test --coverage --watchAll=false
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          AMPLITUDE_KEY: ${{ secrets.AMPLITUDE_KEY }}
          AWS_APPSYNC_URL: ${{ secrets.AWS_APPSYNC_URL }}
          AWS_APPSYNC_REGION: ${{ secrets.AWS_APPSYNC_REGION }}
          AWS_APPSYNC_API_KEY: ${{ secrets.AWS_APPSYNC_API_KEY }}
          CONTENTFUL_SPACE: ${{ secrets.CONTENTFUL_SPACE }}
          CONTENTFUL_ACCESS_TOKEN_DRAFTS: ${{ secrets.CONTENTFUL_ACCESS_TOKEN_DRAFTS }}
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
  test-detox:
    name: Test - Detox
    runs-on: macos-latest
    # needs: setup-macos
    env:
      CODE_SIGNING_REQUIRED: NO
    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive
      - uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: v1-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - uses: actions/cache@v1
        id: submodule-cache
        with:
          path: src/shared/node_modules
          key: v1-${{ runner.os }}-${{ hashFiles('src/shared/yarn.lock') }}
      - name: Create Google Services Config File 
        run: echo "$GOOGLE_SERVICES" >> "google-services.json"
      - name: Install Detox
        run: |
          brew tap wix/brew
          brew install applesimutils --HEAD
      - name: Yarn Install
        if: steps.cache.outputs.cache-hit != 'true' || steps.submodule-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Rebuild Detox
        run: |
          yarn detox clean-framework-cache
          yarn detox build-framework-cache
          yarn expotox clean-framework-cache
          yarn expotox build-framework-cache
      - name: Download Expo Client
        run: |
          mkdir e2e/Exponent.app
          cd e2e/Exponent.app
          curl https://dpq5q02fu5f55.cloudfront.net/Exponent-2.16.0.tar.gz --output Exponent.tar.gz
          tar -xzvf Exponent.tar.gz
      - name: Expo Login
        run: yarn expo login --non-interactive -u $EXPO_CLI_USERNAME
        env:
          EXPO_CLI_PASSWORD: ${{ secrets.EXPO_CLI_PASSWORD }}
          EXPO_CLI_USERNAME: ${{ secrets.EXPO_CLI_USERNAME }}
      - name: Run Detox Tests
        run: yarn e2e
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          AMPLITUDE_KEY: ${{ secrets.AMPLITUDE_KEY }}
          AWS_APPSYNC_URL: ${{ secrets.AWS_APPSYNC_URL }}
          AWS_APPSYNC_REGION: ${{ secrets.AWS_APPSYNC_REGION }}
          AWS_APPSYNC_API_KEY: ${{ secrets.AWS_APPSYNC_API_KEY }}
          CONTENTFUL_SPACE: ${{ secrets.CONTENTFUL_SPACE }}
          CONTENTFUL_ACCESS_TOKEN_DRAFTS: ${{ secrets.CONTENTFUL_ACCESS_TOKEN_DRAFTS }}
        timeout-minutes: 25 
  deploy-netlify:
    name: Deploy - Netlify
    runs-on: ubuntu-latest
    needs: [test-lint, test-typecheck, test-jest, test-detox]
    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive
      - uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: v1-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - uses: actions/cache@v1
        id: submodule-cache
        with:
          path: src/shared/node_modules
          key: v1-${{ runner.os }}-${{ hashFiles('src/shared/yarn.lock') }}
      - name: Expo Build Web
        run: yarn expo build:web --non-interactive
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          AMPLITUDE_KEY: ${{ secrets.AMPLITUDE_KEY }}
          AWS_APPSYNC_URL: ${{ secrets.AWS_APPSYNC_URL }}
          AWS_APPSYNC_REGION: ${{ secrets.AWS_APPSYNC_REGION }}
          AWS_APPSYNC_API_KEY: ${{ secrets.AWS_APPSYNC_API_KEY }}
          CONTENTFUL_SPACE: ${{ secrets.CONTENTFUL_SPACE }}
          CONTENTFUL_ACCESS_TOKEN_DRAFTS: ${{ secrets.CONTENTFUL_ACCESS_TOKEN_DRAFTS }}
      - name: Netlify Deploy
        run: yarn netlify deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN --prod
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
  deploy-expo-publish:
    name: Deploy - Expo Publish
    runs-on: ubuntu-latest
    needs: [test-lint, test-typecheck, test-jest, test-detox]
    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive
      - uses: actions/cache@v1
        id: cache
        with:
          path: node_modules
          key: v1-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - uses: actions/cache@v1
        id: submodule-cache
        with:
          path: src/shared/node_modules
          key: v1-${{ runner.os }}-${{ hashFiles('src/shared/yarn.lock') }}
      - name: Create Google Services Config File 
        run: echo "$GOOGLE_SERVICES" >> "google-services.json"
      - name: Setup kernel for react native, increase watchers
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      - name: Expo Login
        run: yarn expo login --non-interactive -u $EXPO_CLI_USERNAME
        env:
          EXPO_CLI_PASSWORD: ${{ secrets.EXPO_CLI_PASSWORD }}
          EXPO_CLI_USERNAME: ${{ secrets.EXPO_CLI_USERNAME }}
      - name: Expo Publish
        run: yarn ota:beta
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          AMPLITUDE_KEY: ${{ secrets.AMPLITUDE_KEY }}
          AWS_APPSYNC_URL: ${{ secrets.AWS_APPSYNC_URL }}
          AWS_APPSYNC_REGION: ${{ secrets.AWS_APPSYNC_REGION }}
          AWS_APPSYNC_API_KEY: ${{ secrets.AWS_APPSYNC_API_KEY }}
          CONTENTFUL_SPACE: ${{ secrets.CONTENTFUL_SPACE }}
          CONTENTFUL_ACCESS_TOKEN_DRAFTS: ${{ secrets.CONTENTFUL_ACCESS_TOKEN_DRAFTS }}